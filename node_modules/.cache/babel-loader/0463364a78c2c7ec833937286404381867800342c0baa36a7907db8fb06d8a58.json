{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\quizapp\\\\src\\\\QuizPage.js\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport $ from 'jquery';\nimport ModalInstructions from './ModalInstructions';\nimport PromotionPage from './PromotionPage';\nimport ResultsPage from './ResultsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage(props) {\n  _s();\n  const [data, setData] = useState([]);\n\n  // const [userAnswers,setUserAnswers]=useState([])\n\n  const userAnswers = [];\n  const apiAnswers = [];\n  const marks = useRef(0);\n  const [submitData, setSubmitData] = useState(false);\n\n  // define the count Interval for the countdown timer :)\n  let countInterval;\n\n  // count the number of questions, which helps us to allocate id's to the question :)\n  let questionCount = 0;\n\n  // create useRef Hook for promotion, which stores the mutable value even if the component re-renders:)\n  let btnClicked = useRef();\n\n  // const [uName]=props.userName;\n  const quizApi = 'https://quizapi.io/api/v1/questions?apiKey=P7mSuG2QyMCPnS5zWo3iYBVLH61UG1M7OMt1SDHf&category=code&difficulty=Easy&limit=20&tags=JavaScript';\n  useEffect(() => {\n    console.log('useeffect');\n\n    // call fetchApi function when component renders everytime :)\n    fetchApi();\n\n    // call countDown function when component(quizPage) renders everytime :)\n    countDown();\n    btnClicked.current = true;\n    window.addEventListener('scroll', () => {\n      const scrollHeight = document.documentElement.scrollTop;\n      if (scrollHeight < 320) $('#scrollToTop').css({\n        display: 'none'\n      });else $('#scrollToTop').css({\n        display: 'block'\n      });\n    });\n    if (submitData) clearInterval(countInterval);\n\n    // when clicking on the promotion button it will toggle the social media buttons :)\n    const promotionbtn = document.querySelector('#promotionBtn');\n    promotionbtn.addEventListener('click', () => {\n      if (btnClicked.current === true) {\n        $('#promotion').css({\n          display: 'block'\n        });\n        $('#promotion').addClass('d-flex');\n        btnClicked.current = false;\n      } else {\n        $('#promotion').css({\n          display: 'none'\n        });\n        $('#promotion').removeClass('d-flex');\n        btnClicked.current = true;\n      }\n    });\n    return () => {\n      // We have to clear the setInterval when the Component is destroyed :)\n      clearInterval(countInterval);\n    };\n  }, []);\n\n  // Fetch the API data using axios and asynchronous method :)\n  const fetchApi = async () => {\n    try {\n      const responseApi = await axios.get(quizApi);\n      console.log(responseApi.data);\n      setData(responseApi.data);\n    } catch (err) {\n      console.log('Network error');\n      alert('Network error');\n    }\n  };\n\n  // set the coundown time to the user :)\n  const countDown = () => {\n    const countDownEle = document.querySelector('div #countDown');\n    let seconds = 0;\n    let minutes = 0;\n    countInterval = setInterval(() => {\n      if (seconds >= 60) {\n        minutes++;\n        seconds = 0;\n      }\n\n      /* 4 constraints\r\n      *   seconds<10 -> minutes>9 & minutes<10\r\n      *   seconds>10 -> minutes>9 & minutes<10\r\n      */\n      countDownEle.textContent = seconds < 10 ? minutes > 9 ? minutes + \":0\" + seconds : \"0\" + minutes + \":0\" + seconds : minutes > 9 ? minutes + \":\" + seconds : \"0\" + minutes + \":\" + seconds;\n      seconds++;\n    }, 1000);\n  };\n\n  // rendering questions to the browser :)\n  const addQuestions = (option, optionNum) => {\n    // it accepts 2 parameters -> option value(label) & -> option number :)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded rounded-3 py-2 px-2 mb-4 mt-1 optionParent\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        className: \"form-check-input ms-3 option\",\n        value: option,\n        onChange: e => checkInputEle(e),\n        id: `q${questionCount}opt${optionNum}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ms-2\",\n        htmlFor: `q${questionCount}opt${optionNum}`,\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this);\n  };\n  const checkInputEle = e => {\n    // setUserAnswers([...userAnswers,e.target.id])\n\n    let questionNum = e.target.id;\n    let optionNum = e.target.id;\n    if (Number(questionNum.substring(1, 3))) {\n      questionNum = Number(questionNum.substring(1, 3));\n      optionNum = Number(optionNum.substring(6, 8)) + 96;\n    } else {\n      questionNum = Number(questionNum.charAt(1));\n      optionNum = Number(optionNum.charAt(5)) + 96;\n    }\n    const optionChar = `answer_${String.fromCharCode(optionNum)}_correct`;\n    userAnswers[questionNum] = optionChar;\n    return e.target.checked;\n  };\n  const submitQuiz = () => {\n    data.map((item, index) => {\n      const ele = item.correct_answers;\n      if (ele.answer_a_correct === \"true\") apiAnswers[index + 1] = \"answer_a_correct\";else if (ele.answer_b_correct === \"true\") apiAnswers[index + 1] = \"answer_b_correct\";else if (ele.answer_c_correct === \"true\") apiAnswers[index + 1] = \"answer_c_correct\";else if (ele.answer_d_correct === \"true\") apiAnswers[index + 1] = \"answer_d_correct\";\n    });\n    for (let start = 1; start < apiAnswers.length; start++) {\n      if (apiAnswers[start] === userAnswers[start]) marks.current += 1;\n    }\n    setSubmitData(true);\n  };\n  return /*#__PURE__*/_jsxDEV(ResultsPage, {\n    marks: marks.current\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"7nGtPYEGgdYuv4+ph5GQeWFJ1QI=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","$","ModalInstructions","PromotionPage","ResultsPage","jsxDEV","_jsxDEV","QuizPage","props","_s","data","setData","userAnswers","apiAnswers","marks","submitData","setSubmitData","countInterval","questionCount","btnClicked","quizApi","console","log","fetchApi","countDown","current","window","addEventListener","scrollHeight","document","documentElement","scrollTop","css","display","clearInterval","promotionbtn","querySelector","addClass","removeClass","responseApi","get","err","alert","countDownEle","seconds","minutes","setInterval","textContent","addQuestions","option","optionNum","className","children","type","name","value","onChange","e","checkInputEle","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","questionNum","target","Number","substring","charAt","optionChar","String","fromCharCode","checked","submitQuiz","map","item","index","ele","correct_answers","answer_a_correct","answer_b_correct","answer_c_correct","answer_d_correct","start","length","_c","$RefreshReg$"],"sources":["D:/Projects/quizapp/src/QuizPage.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport $ from 'jquery'\r\nimport ModalInstructions from './ModalInstructions'\r\nimport PromotionPage from './PromotionPage'\r\nimport ResultsPage from './ResultsPage'\r\n\r\nfunction QuizPage(props) {\r\n\r\n    const [data,setData]=useState([])\r\n\r\n    // const [userAnswers,setUserAnswers]=useState([])\r\n\r\n    const userAnswers=[]\r\n\r\n    const apiAnswers=[]\r\n\r\n    const marks=useRef(0)\r\n\r\n    const [submitData,setSubmitData]=useState(false)\r\n\r\n    // define the count Interval for the countdown timer :)\r\n    let countInterval\r\n\r\n    // count the number of questions, which helps us to allocate id's to the question :)\r\n    let questionCount=0\r\n\r\n    // create useRef Hook for promotion, which stores the mutable value even if the component re-renders:)\r\n    let btnClicked=useRef()\r\n\r\n    // const [uName]=props.userName;\r\n    const quizApi='https://quizapi.io/api/v1/questions?apiKey=P7mSuG2QyMCPnS5zWo3iYBVLH61UG1M7OMt1SDHf&category=code&difficulty=Easy&limit=20&tags=JavaScript'\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log('useeffect');\r\n\r\n        // call fetchApi function when component renders everytime :)\r\n        fetchApi()\r\n\r\n        // call countDown function when component(quizPage) renders everytime :)\r\n        countDown()\r\n\r\n        btnClicked.current=true\r\n\r\n        window.addEventListener('scroll',()=>{\r\n            const scrollHeight=document.documentElement.scrollTop\r\n            if(scrollHeight<320)\r\n                $('#scrollToTop').css({display:'none'})\r\n            else\r\n                $('#scrollToTop').css({display:'block'})            \r\n        })\r\n        \r\n        if(submitData)\r\n            clearInterval(countInterval)\r\n\r\n        // when clicking on the promotion button it will toggle the social media buttons :)\r\n        const promotionbtn=document.querySelector('#promotionBtn')\r\n        promotionbtn.addEventListener('click',()=>{\r\n            if(btnClicked.current===true){\r\n                $('#promotion').css({display:'block'})\r\n                $('#promotion').addClass('d-flex')\r\n                btnClicked.current=false\r\n            }\r\n            else{\r\n                $('#promotion').css({display:'none'})\r\n                $('#promotion').removeClass('d-flex')\r\n                btnClicked.current=true\r\n            }\r\n        })\r\n       \r\n\r\n        \r\n        return ()=>{\r\n            \r\n            // We have to clear the setInterval when the Component is destroyed :)\r\n            clearInterval(countInterval)\r\n        }\r\n\r\n    },[])\r\n\r\n    // Fetch the API data using axios and asynchronous method :)\r\n    const fetchApi=async()=>{\r\n\r\n        try{\r\n            const responseApi=await axios.get(quizApi)\r\n            console.log(responseApi.data)\r\n            setData(responseApi.data)\r\n        }\r\n        catch(err){\r\n            console.log('Network error');\r\n            alert('Network error');\r\n        }\r\n\r\n    }\r\n\r\n    // set the coundown time to the user :)\r\n    const countDown=()=>{\r\n        const countDownEle=document.querySelector('div #countDown')\r\n        let seconds=0\r\n        let minutes=0\r\n\r\n        countInterval=setInterval(()=>{\r\n            if(seconds>=60){\r\n                minutes++\r\n                seconds=0\r\n            }\r\n\r\n            /* 4 constraints\r\n            *   seconds<10 -> minutes>9 & minutes<10\r\n            *   seconds>10 -> minutes>9 & minutes<10\r\n            */\r\n            countDownEle.textContent=(seconds<10)?   \r\n                                                ((minutes>9)? minutes+\":0\"+seconds   :   \"0\"+minutes+\":0\"+seconds )  \r\n                                                :   \r\n                                                (minutes>9)? minutes+\":\"+seconds   :   \"0\"+minutes+\":\"+seconds\r\n\r\n            seconds++\r\n        },1000)\r\n\r\n    }\r\n\r\n    // rendering questions to the browser :)\r\n    const addQuestions = (option,optionNum)=>{ // it accepts 2 parameters -> option value(label) & -> option number :)\r\n\r\n        return  <div className='rounded rounded-3 py-2 px-2 mb-4 mt-1 optionParent'>\r\n                    {/*  render input (radio) elements */}\r\n                    <input\r\n                        type='radio'\r\n                        name='options'\r\n                        className='form-check-input ms-3 option'\r\n                        value={option}\r\n                        \r\n                        onChange={(e)=>checkInputEle(e)}\r\n                        id={`q${questionCount}opt${optionNum}`}\r\n                    />\r\n                    <label className='ms-2' htmlFor={`q${questionCount}opt${optionNum}`}>{option}</label>\r\n                </div>\r\n    }\r\n\r\n    const checkInputEle=(e)=>{\r\n        \r\n        // setUserAnswers([...userAnswers,e.target.id])\r\n\r\n        let questionNum=e.target.id\r\n        let optionNum=e.target.id\r\n\r\n        if(Number(questionNum.substring(1,3))){\r\n            questionNum=Number(questionNum.substring(1,3))\r\n            optionNum=Number(optionNum.substring(6,8))+96\r\n        }\r\n        else{\r\n            questionNum=Number(questionNum.charAt(1))\r\n            optionNum=Number(optionNum.charAt(5))+96\r\n        }\r\n\r\n        const optionChar=`answer_${String.fromCharCode(optionNum)}_correct`\r\n\r\n        userAnswers[questionNum]=optionChar\r\n\r\n        return e.target.checked\r\n    }\r\n\r\n    const submitQuiz=()=>{\r\n\r\n        data.map((item,index)=>{\r\n            const ele=item.correct_answers\r\n            \r\n            if(ele.answer_a_correct===\"true\")\r\n                apiAnswers[index+1]=\"answer_a_correct\"\r\n            else if(ele.answer_b_correct===\"true\")\r\n                apiAnswers[index+1]=\"answer_b_correct\"\r\n            else if(ele.answer_c_correct===\"true\")\r\n                apiAnswers[index+1]=\"answer_c_correct\"\r\n            else if(ele.answer_d_correct===\"true\")\r\n                apiAnswers[index+1]=\"answer_d_correct\"\r\n        })\r\n\r\n        for(let start=1;start<apiAnswers.length;start++){\r\n            if(apiAnswers[start]===userAnswers[start])\r\n                marks.current+=1\r\n        }\r\n        \r\n        setSubmitData(true)\r\n    }\r\n     \r\n    return (\r\n        \r\n\r\n        <ResultsPage marks={marks.current}/>\r\n    )\r\n}\r\n\r\nexport default QuizPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}